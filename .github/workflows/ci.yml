name: CI

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'weread-bot.py'
      - 'requirements.txt'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'weread-bot.py'
      - 'requirements.txt'
      - '.github/workflows/ci.yml'

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # - name: Lint with flake8 (optional)
    #   run: |
    #     pip install flake8
    #     # 停止构建如果有Python语法错误或未定义的名称
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # 将其他问题作为警告处理
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #   continue-on-error: true

    - name: Test script syntax
      run: |
        python -m py_compile weread-bot.py

    - name: Test script help
      run: |
        python weread-bot.py --help

  # security-check:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Set up Python
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: '3.11'

  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements.txt
  #       pip install bandit safety

  #   - name: Security scan with bandit
  #     run: |
  #       bandit -r weread-bot.py -f json -o bandit-report.json
  #     continue-on-error: true

  #   - name: Check dependencies for security vulnerabilities
  #     run: |
  #       safety check --json --output safety-report.json
  #     continue-on-error: true
